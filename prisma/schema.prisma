generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model List {
    id          Int         @id @default(autoincrement())
    createdBy   User        @relation(fields: [userId], references: [id])
    userId      String
    listName    String
    createdAt   DateTime    @default(now())
    submitted   Boolean
    participants Participant[]
    picks       Picks[]
}

model Participant {
    id          Int         @id @default(autoincrement())
    firstName   String
    email       String
    list        List        @relation(fields: [listId], references: [id], onDelete: Cascade)
    listId      Int
}

model Picks {
    data        Json
    list        List    @relation(fields: [listId], references: [id], onDelete: Cascade)
    listId      Int

    @@unique([listId])
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    lists         List[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
